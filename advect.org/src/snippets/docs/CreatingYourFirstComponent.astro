---
import FirstComponent from "../FirstComponent.astro";
---

<section>
  <div class="content">
    <div class="columns">
      <div class="column">
        <h2 id="creating-a-component">Your first Component</h2>

        <p>
          Creating a component is easy with the declarative syntax. All you need
          is a <code>&lt;template&gt;</code> with the following attributes:
        </p>
        <ul>
          <li>
            An <code>id</code> attribute <strong>(required)</strong>. This will
            be used as the tag of your custom web element. This value will need
            to be valid for a custom web element.
          </li>
          <li>
            An <code>adv</code> attribute <strong>(required)</strong>. This does
            NOT need a value, this just tells the system that the template is
            indeed an element that needs to be registered and is not just
            another template you have inside your document.
          </li>
          <li>
            The <code>root</code> attribute <strong>(optional)</strong> declares
            where in the component the markup will be added to. The options are <code
              >light</code
            > | <code>shadow</code> | <code>none</code>.
            <br />
            <ul>
              <li>
                <code>light</code> markup will added to the regular dom when component
                is connected. (default when <i>root</i> is not present)
              </li>
              <li>
                <code>shadow</code> markup will added to the shadow-dom when component
                is connected.
              </li>
              <li>
                <code>none</code> no markup will added to component when connected.
              </li>
            </ul>
          </li>
          <li>
            The <code>shadow</code> attribute <strong>(optional)</strong> is passed
            to the <i>mode</i> of <code>this.attachShadow</code> call. The options
            are <code>open</code>| <code>closed</code> (default is <code
              >closed</code
            >)
          </li>
        </ul>
        <br />
    
      </div>
      <div class="column">
        <FirstComponent />
        <p>
          The <code> &lt;script type="module"&gt;</code> tag is also <i>optional*</i> but when provided allows for the scripting of your custom element.
          <br>
          The <code> &lt;script type="module"&gt;</code> is expected to export a class that extends AdvectElement with a name that is the <code>PascalCase</code> version of your component name.
          In this example <code>&lt;template id="hello-button" ... &gt;</code> must export a class <code>HelloButton</code>. (<strong>NOT</strong> as the default for the module).
        </p>
      </div>
    </div>
  </div>
</section>
